spring.datasource.url=${jdbc:postgresql://localhost:5432/food-order-system}
spring.datasource.username=${postgres}
spring.datasource.password=${AYBEN?Z}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=20000
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:3600000}
server.port=${PORT:8080}
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE_PATH:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
logging.level.com.example.foodordersystem=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.springframework.web=WARN
app.openapi.dev-url=https://dev-api.foodorder.com
app.openapi.prod-url=https://api.foodorder.com
app.cors.allowed-origins=${ALLOWED_ORIGINS:https://foodorder.com}
app.cors.allowed-methods=GET,POST,PUT,DELETE
app.cors.allowed-headers=Authorization,Content-Type
app.cors.allow-credentials=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict
app.rate-limit.enabled=true
app.rate-limit.requests-per-minute=100
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized



